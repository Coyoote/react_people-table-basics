{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","NavBar","role","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PersonInfo","personMother","personFather","personMotherName","motherName","personFatherName","fatherName","born","died","PeopleTable","people","length","map","find","mother","father","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useParams","fetchPeople","useCallback","loadedPeople","useEffect","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b67e3e99.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    }))}\n  >\n    {title}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`../${person.slug}`}\n    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n  slug: string,\n  personMother: Person | undefined,\n  personFather: Person | undefined,\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  slug,\n  personMother,\n  personFather,\n}) => {\n  const personMotherName = person.motherName || '-';\n  const personFatherName = person.fatherName || '-';\n\n  return (\n    <tr\n      key={person.slug}\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': person.slug === slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {personMother\n          ? (<PersonLink person={personMother} />)\n          : (personMotherName)}\n      </td>\n      <td>\n        {personFather\n          ? (<PersonLink person={personFather} />)\n          : (personFatherName)}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  people: Person[],\n  slug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, slug }) => {\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const personMother = people\n            .find(mother => mother.name === person.motherName);\n          const personFather = people\n            .find(father => father.name === person.fatherName);\n\n          return (\n            <PersonInfo\n              person={person}\n              slug={slug}\n              personMother={personMother}\n              personFather={personFather}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const { slug = '' } = useParams();\n\n  const fetchPeople = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const loadedPeople = await getPeople();\n\n      setIsLoading(false);\n      setPeople(loadedPeople);\n    } catch (error) {\n      setHasError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {hasError\n          ? (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )\n          : (\n            <>\n              {isLoading\n                ? (\n                  <Loader />\n                )\n                : (\n                  <PeopleTable people={people} slug={slug} />\n                )}\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}